// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeGaleriaDeArteAPI.Data;

#nullable disable

namespace SistemaDeGaleriaDeArteAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241218194652_criandoBD")]
    partial class criandoBD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeGaleriaDeArteAPI.Models.CategoryModel", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar")
                        .HasColumnName("work_name");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar")
                        .HasColumnName("description");

                    b.HasKey("CategoryID");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("SistemaDeGaleriaDeArteAPI.Models.UserModel", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Bio")
                        .HasMaxLength(120)
                        .HasColumnType("text")
                        .HasColumnName("bio");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("varchar")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("varchar")
                        .HasColumnName("user_email");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar")
                        .HasColumnName("user_name");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("SistemaDeGaleriaDeArteAPI.Models.WorkModel", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("work_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WorkId"));

                    b.Property<int>("ArtistUserID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("imageurl");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isAvailable");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("lastUpdateDate");

                    b.Property<string>("NameWork")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar")
                        .HasColumnName("work_name");

                    b.HasKey("WorkId");

                    b.HasIndex("ArtistUserID");

                    b.HasIndex("CategoryID");

                    b.ToTable("works", (string)null);
                });

            modelBuilder.Entity("SistemaDeGaleriaDeArteAPI.Models.WorkModel", b =>
                {
                    b.HasOne("SistemaDeGaleriaDeArteAPI.Models.UserModel", "Artist")
                        .WithMany("Works")
                        .HasForeignKey("ArtistUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeGaleriaDeArteAPI.Models.CategoryModel", "Category")
                        .WithMany("Works")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SistemaDeGaleriaDeArteAPI.Models.CategoryModel", b =>
                {
                    b.Navigation("Works");
                });

            modelBuilder.Entity("SistemaDeGaleriaDeArteAPI.Models.UserModel", b =>
                {
                    b.Navigation("Works");
                });
#pragma warning restore 612, 618
        }
    }
}
